# Backend Environment Variables Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
# Development: Use localhost or Docker service name (db)
# Production: Use your managed database URL
DATABASE_URL=postgresql://notes_user:notes_password@db:5432/notes2gogo

# Test database (for running tests)
TEST_DATABASE_URL=postgresql://notes_user:notes_password@localhost/notes2gogo_test

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Secret key for JWT token signing (CHANGE IN PRODUCTION!)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(64))"
SECRET_KEY=your-super-secret-key-change-this-in-production-use-at-least-32-characters

# JWT algorithm (HS256 is recommended)
ALGORITHM=HS256

# Access token expiration time in minutes (default: 30)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Allowed origins for CORS (comma-separated or JSON array)
# Development: Include localhost URLs (Vite uses 5173, production uses 3000)
# Production: Use your actual domain(s)
ALLOWED_ORIGINS=["http://localhost:3000","http://localhost:5173","http://127.0.0.1:3000"]

# =============================================================================
# ENVIRONMENT SETTINGS
# =============================================================================
# Environment mode: development, staging, production
ENVIRONMENT=development

# Debug mode (MUST be false in production!)
DEBUG=true

# =============================================================================
# OPTIONAL: ERROR TRACKING (Sentry)
# =============================================================================
# Uncomment and add your Sentry DSN for error tracking
# SENTRY_DSN=https://your-key@sentry.io/your-project-id

# =============================================================================
# OPTIONAL: EMAIL CONFIGURATION
# =============================================================================
# Uncomment and configure for email functionality (future feature)
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=noreply@example.com
# SMTP_PASSWORD=your-email-password
# SMTP_TLS=true
# SMTP_FROM_EMAIL=noreply@example.com
# SMTP_FROM_NAME=Notes2GoGo

# =============================================================================
# OPTIONAL: FILE STORAGE (Future feature - Phase 4)
# =============================================================================
# S3-compatible storage for file attachments
# S3_ENDPOINT=https://s3.amazonaws.com
# S3_BUCKET=notes2gogo-attachments
# S3_ACCESS_KEY=your-access-key
# S3_SECRET_KEY=your-secret-key
# S3_REGION=us-east-1

# =============================================================================
# OPTIONAL: REDIS CONFIGURATION (Future feature)
# =============================================================================
# Redis for caching and session management
# REDIS_URL=redis://localhost:6379/0

# =============================================================================
# OPTIONAL: RATE LIMITING
# =============================================================================
# Rate limit for API endpoints (requests per minute)
# API_RATE_LIMIT=60
# LOGIN_RATE_LIMIT=5

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
# SQLAlchemy echo (log all SQL queries - verbose!)
# Set to true only when debugging database queries
SQLALCHEMY_ECHO=false

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# =============================================================================
# NOTES FOR PRODUCTION DEPLOYMENT
# =============================================================================
# 1. ALWAYS change SECRET_KEY to a strong random value
# 2. Set DEBUG=false
# 3. Use HTTPS in ALLOWED_ORIGINS (https://...)
# 4. Use managed database service (AWS RDS, DigitalOcean Managed PostgreSQL)
# 5. Use strong database passwords (20+ characters)
# 6. Enable firewall rules to restrict database access
# 7. Consider using environment secrets management (AWS Secrets Manager, etc.)
# 8. Never commit .env file to version control
# 9. Set up monitoring and error tracking (Sentry)
# 10. Configure regular database backups